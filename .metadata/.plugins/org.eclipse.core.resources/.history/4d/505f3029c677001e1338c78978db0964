package com.ezdi.ocr.dto.common;

import java.util.Objects;

public class Range implements Comparable<Range>
{
	private int	start;
	private int	end;

	public Range(int start, int end)
	{
		this.start = start;
		this.end = end;
	}

	public void merge(Range other)
	{
		this.start = Math.min(this.start, other.start);
		this.end = Math.max(this.end, other.end);
	}

	@Override
	public int compareTo(Range o)
	{
		int val = Integer.compare(this.start, o.start);
		if (val == 0)
		{
			return Integer.compare(this.end, o.end);
		}
		return val;
	}

	public int getStart()
	{
		return start;
	}

	public int getEnd()
	{
		return end;
	}

	public boolean contains(Range other)
	{
		return this.start <= other.start
				&& other.end <= this.end;
	}

	@Override
	public int hashCode()
	{
		return Objects.hash(end, start);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Range other = (Range) obj;
		return end == other.end
				&& start == other.start;
	}

	@Override
	public String toString()
	{
		return start + "-" + end;
	}

}